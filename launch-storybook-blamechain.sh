#!/bin/bash

# üìö‚õìÔ∏è LAUNCH STORYBOOK BLAMECHAIN SYSTEM
# =======================================
# Blamechain IS the storybook - Web compliant bot swarm spawning

echo "üìö‚õìÔ∏è STORYBOOK BLAMECHAIN SYSTEM"
echo "================================"
echo ""
echo "üß† Revolutionary Concept:"
echo "   ‚Ä¢ Blamechain IS the storybook"
echo "   ‚Ä¢ Every action becomes narrative history"
echo "   ‚Ä¢ Accountability through storytelling"
echo "   ‚Ä¢ Bot swarms spawn 4 at a time per player"
echo "   ‚Ä¢ 100% web compliant observation only"
echo ""

# Check if port 7777 is available
if lsof -Pi :7777 -sTCP:LISTEN -t >/dev/null ; then
    echo "‚ö†Ô∏è  Port 7777 is already in use. Stopping existing service..."
    kill $(lsof -t -i:7777) 2>/dev/null || true
    sleep 2
fi

echo "üìö ARCHIVE INTEGRATION:"
echo "   ‚Ä¢ Archive.is - Eternal story preservation"
echo "   ‚Ä¢ Archive.org - Wayback machine integration"  
echo "   ‚Ä¢ Wikipedia - Read-only knowledge access"
echo "   ‚Ä¢ ICANN - Full compliance monitoring"
echo "   ‚Ä¢ Robots.txt - Respectful observation"
echo ""

echo "ü§ñ BOT SWARM SYSTEM:"
echo "   ‚Ä¢ 4 bots spawn per player automatically"
echo "   ‚Ä¢ Stealth Observers (95% antidetection)"
echo "   ‚Ä¢ World Architects (80% antidetection)"
echo "   ‚Ä¢ Story Chroniclers (70% antidetection)"
echo "   ‚Ä¢ Archive Crawlers (85% antidetection)"
echo "   ‚Ä¢ Compliance Checkers (95% antidetection)"
echo ""

echo "üëÅÔ∏è MINIMAP BRAIN INTEGRATION:"
echo "   ‚Ä¢ Eyeball swarms manage bot deployment"
echo "   ‚Ä¢ World building based on player spawns"
echo "   ‚Ä¢ Adaptive environment generation"
echo "   ‚Ä¢ Real-time world testing and simulation"
echo ""

echo "üåê WEB COMPLIANCE FRAMEWORK:"
echo "   ‚Ä¢ Observation only - no data modification"
echo "   ‚Ä¢ Respect all robots.txt files"
echo "   ‚Ä¢ Honor rate limits and privacy policies"
echo "   ‚Ä¢ ICANN compliant operations"
echo "   ‚Ä¢ Archive.is style preservation"
echo "   ‚Ä¢ Wiki-style read-only access"
echo ""

echo "‚õìÔ∏è STORYBOOK BLAMECHAIN FEATURES:"
echo "   ‚Ä¢ Every action recorded as narrative"
echo "   ‚Ä¢ Accountability through storytelling"
echo "   ‚Ä¢ Immutable story preservation"
echo "   ‚Ä¢ Cross-referenced archive links"
echo "   ‚Ä¢ Compliance verification in each block"
echo ""

echo "üéÆ PLAYER SPAWNING SYSTEM:"
echo "   ‚Ä¢ Each player gets their own world"
echo "   ‚Ä¢ 4-bot swarm automatically assigned"
echo "   ‚Ä¢ World built according to player preferences"
echo "   ‚Ä¢ Story threads created for each world"
echo "   ‚Ä¢ All actions recorded in storybook"
echo ""

echo "üöÄ Launching Storybook Blamechain System..."
node storybook-blamechain-system.js &
STORYBOOK_PID=$!

# Wait for startup
sleep 3

# Check if system started successfully
if ps -p $STORYBOOK_PID > /dev/null; then
    echo ""
    echo "‚úÖ Storybook Blamechain System started successfully!"
    echo ""
    echo "üìö STORYBOOK INTERFACE: http://localhost:7777"
    echo ""
    echo "üéØ WHAT YOU'LL SEE:"
    echo "   ‚Ä¢ Living Chronicle: Real-time story blocks being mined"
    echo "   ‚Ä¢ Player Spawning: Button to create new players with worlds"
    echo "   ‚Ä¢ Active Worlds: All currently running player worlds"
    echo "   ‚Ä¢ Bot Swarms: 4-bot teams with antidetection levels"
    echo "   ‚Ä¢ Compliance Status: Full web compliance verification"
    echo "   ‚Ä¢ Archive Status: External preservation tracking"
    echo ""
    echo "üìñ STORY BLOCK STRUCTURE:"
    echo "   ‚Ä¢ Genesis Block: 'The Beginning of All Stories'"
    echo "   ‚Ä¢ Action Chronicles: Real actions woven into narrative"
    echo "   ‚Ä¢ World Creation Stories: New worlds becoming reality"
    echo "   ‚Ä¢ Bot Deployment Tales: Digital helpers materializing"
    echo "   ‚Ä¢ Archive Preservation: Knowledge saved for eternity"
    echo ""
    echo "ü§ñ BOT SWARM ACTIVITIES:"
    echo "   ‚Ä¢ Stealth Observers: Archive verification, compliance monitoring"
    echo "   ‚Ä¢ World Architects: Terrain generation, physics calibration"
    echo "   ‚Ä¢ Story Chroniclers: Narrative weaving, character development"
    echo "   ‚Ä¢ All recorded as story actions in the blamechain"
    echo ""
    echo "üåç WORLD BUILDING PROCESS:"
    echo "   1. Player spawns ‚Üí World ID generated"
    echo "   2. 4-bot swarm assigned ‚Üí Antidetection profiles created"
    echo "   3. Environment generated ‚Üí Based on player preferences"
    echo "   4. Story thread started ‚Üí All actions recorded"
    echo "   5. World evolves ‚Üí According to bot activities"
    echo ""
    echo "‚ö° REAL-TIME FEATURES:"
    echo "   ‚Ä¢ Live story block mining"
    echo "   ‚Ä¢ Bot swarm status monitoring"
    echo "   ‚Ä¢ Archive compliance tracking"
    echo "   ‚Ä¢ Player world simulation"
    echo "   ‚Ä¢ Antidetection level display"
    echo ""
    
    # Try to open browser
    if command -v open >/dev/null 2>&1; then
        echo "üåê Opening storybook blamechain interface..."
        open http://localhost:7777
    elif command -v xdg-open >/dev/null 2>&1; then
        echo "üåê Opening storybook blamechain interface..."
        xdg-open http://localhost:7777
    else
        echo "üì± Manually visit: http://localhost:7777"
    fi
    
    echo ""
    echo "‚èπÔ∏è  To stop: kill $STORYBOOK_PID"
    echo ""
    echo "üìö The living chronicle begins its eternal recording..."
    echo ""
    
    # Keep script running
    echo "üîÑ Storybook blamechain running... Press Ctrl+C to stop"
    trap "echo ''; echo 'üìö Closing the storybook...'; kill $STORYBOOK_PID; exit 0" INT
    
    # Monitor the process
    while ps -p $STORYBOOK_PID > /dev/null; do
        sleep 5
    done
    
    echo "‚ùå Storybook blamechain system stopped"
else
    echo "‚ùå Failed to launch Storybook Blamechain System"
    exit 1
fi