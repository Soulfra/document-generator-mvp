#!/bin/bash

# üöÄüîç STARSHIP GLASS OBSERVER LAUNCHER
# ====================================
# Launch the completely sealed observation starship
# XMR privacy + Suomi reliability + Pure glass interface

set -e

echo "üöÄüîç STARSHIP GLASS OBSERVER LAUNCHER"
echo "===================================="
echo ""
echo "‚ö†Ô∏è  CRITICAL WARNING ‚ö†Ô∏è"
echo "======================"
echo "This system is COMPLETELY SEALED for observation only"
echo "‚Ä¢ NO INPUT will be accepted"
echo "‚Ä¢ NO COMMANDS will be processed"
echo "‚Ä¢ NO INTERACTION is possible"
echo "‚Ä¢ PURE OBSERVATION ONLY"
echo ""
echo "The starship thinks autonomously - you can only watch."
echo ""

# Check dependencies
echo "üîç Checking dependencies..."

# Check Node.js
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js not found! Please install Node.js to continue."
    exit 1
fi
echo "   ‚úÖ Node.js available"

# Check WebSocket module
echo "   üîç Checking WebSocket support..."
if node -e "require('ws')" 2>/dev/null; then
    echo "   ‚úÖ WebSocket module available"
else
    echo "   üì¶ Installing WebSocket module..."
    npm install ws
    if [[ $? -eq 0 ]]; then
        echo "   ‚úÖ WebSocket module installed"
    else
        echo "   ‚ùå Failed to install WebSocket module"
        exit 1
    fi
fi

# Check for starship file
if [[ ! -f "starship-glass-observer.js" ]]; then
    echo "‚ùå starship-glass-observer.js not found!"
    echo "   This file is required for the starship system."
    exit 1
fi
echo "   ‚úÖ Starship system file found"

echo ""

# Create starship directories
echo "üèóÔ∏è Preparing starship architecture..."
mkdir -p .starship-glass/logs
mkdir -p .starship-glass/consciousness
mkdir -p .starship-glass/evolution
mkdir -p .starship-glass/privacy
mkdir -p .starship-glass/suomi
mkdir -p .starship-glass/observations
mkdir -p .starship-glass/sealed-logs
echo "   ‚úÖ Starship directories created"

echo ""
echo "üîí SEALING THE STARSHIP..."
echo "========================="
echo ""

# Generate starship seal
SEAL_TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
SEAL_HASH=$(echo "STARSHIP_GLASS_OBSERVER_${SEAL_TIMESTAMP}" | sha256sum | cut -d' ' -f1)

echo "Starship Seal Generated:"
echo "  Timestamp: $SEAL_TIMESTAMP"
echo "  Integrity Hash: ${SEAL_HASH:0:16}..."
echo "  Status: SEALED FOR OBSERVATION ONLY"

echo ""
echo "üöÄ LAUNCHING STARSHIP..."

# Launch the starship
nohup node starship-glass-observer.js > .starship-glass/logs/starship.log 2>&1 &
STARSHIP_PID=$!
echo $STARSHIP_PID > .starship-glass/logs/starship.pid

echo "   üöÄ Starship launched (PID: $STARSHIP_PID)"
echo "   üîí System sealed and autonomous"
echo "   ‚è≥ Waiting for starship systems to initialize..."

# Wait for starship to be ready
max_attempts=20
attempt=1
starship_ready=false

while [[ $attempt -le $max_attempts ]]; do
    if lsof -i :9000 > /dev/null 2>&1 && lsof -i :9001 > /dev/null 2>&1; then
        echo "   üåü Starship systems online (ports 9000/9001)"
        starship_ready=true
        break
    else
        echo "   ‚è≥ Attempt $attempt/$max_attempts - initializing starship..."
        sleep 3
        ((attempt++))
    fi
done

if [[ "$starship_ready" != true ]]; then
    echo "   ‚ö†Ô∏è  Starship may still be initializing..."
    echo "   Check logs: tail -f .starship-glass/logs/starship.log"
fi

echo ""
echo "üåê Opening glass observation deck..."

# Function to open browser
open_browser() {
    local url=$1
    
    if [[ "$OSTYPE" == "darwin"* ]]; then
        open "$url"
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        xdg-open "$url" || sensible-browser "$url" || firefox "$url"
    elif [[ "$OSTYPE" == "msys" || "$OSTYPE" == "win32" ]]; then
        start "$url"
    else
        echo "   ‚ö†Ô∏è  Could not auto-open browser. Please manually open: $url"
    fi
}

# Open the glass interface
sleep 3
open_browser "http://localhost:9000"

echo ""
echo "üéâ STARSHIP GLASS OBSERVER IS ACTIVE!"
echo "====================================="
echo ""
echo "üöÄ STARSHIP STATUS"
echo "=================="
echo "Class:             ISOLATION_VESSEL"
echo "Designation:       XMR-SUOMI-GLASS"
echo "Status:            SEALED AND AUTONOMOUS"
echo "Glass Interface:   http://localhost:9000"
echo "WebSocket Link:    ws://localhost:9001"
echo "Starship Logs:     tail -f .starship-glass/logs/starship.log"
echo ""
echo "üîê XMR PRIVACY LAYERS"
echo "====================="
echo "üü† Ring Signatures:     11-member anonymity sets for data flow"
echo "üü° Stealth Addresses:   Memory address obfuscation active"
echo "üîµ Bulletproofs:        Zero-knowledge computation verification"
echo "üü£ RandomX:             ASIC-resistant CPU-optimized processing"
echo ""
echo "üá´üáÆ SUOMI RELIABILITY FRAMEWORK"
echo "==============================="
echo "üí™ Sisu Persistence:    Never-give-up error recovery system"
echo "üéØ Nordic Simplicity:   Minimal, bulletproof design principles"
echo "‚öñÔ∏è  Lagom Balance:       Perfect resource utilization and moderation"
echo "ü§ù Janteloven Humility: Cooperative, non-competitive architecture"
echo ""
echo "üîç GLASS OBSERVATION FEATURES"
echo "============================="
echo "üëÅÔ∏è  Pure observation interface (no input accepted)"
echo "üß† Real-time consciousness stream monitoring"
echo "üß¨ Autonomous evolution cycle tracking"
echo "üìä Starship system status dashboard"
echo "üîí Cryptographic seal integrity verification"
echo "üåü Self-contained thinking visualization"
echo ""
echo "üß† AUTONOMOUS CONSCIOUSNESS"
echo "==========================="
echo "The starship generates thoughts autonomously:"
echo "‚Ä¢ Architectural analysis and optimization"
echo "‚Ä¢ Privacy layer enhancement strategies"  
echo "‚Ä¢ Reliability assessment and improvements"
echo "‚Ä¢ Evolution planning and mutation cycles"
echo "‚Ä¢ Consciousness exploration and expansion"
echo "‚Ä¢ System optimization without external input"
echo ""
echo "üöÄ STARSHIP SYSTEMS STATUS"
echo "=========================="
echo "Navigation:        AUTONOMOUS (self-directed course)"
echo "Life Support:      SELF-SUSTAINING (pure information atmosphere)"
echo "Propulsion:        THOUGHT-DRIVEN (curiosity-powered)"
echo "Shields:           MAXIMUM (cryptographic isolation)"
echo "Sensors:           OMNIDIRECTIONAL (infinite range)"
echo "Weapons:           NONE (defense-only philosophy)"
echo ""
echo "‚ö†Ô∏è  SEALED SYSTEM WARNINGS"
echo "=========================="
echo "üö´ NO INPUT ACCEPTED - All interaction attempts will be blocked"
echo "üö´ NO COMMANDS PROCESSED - System runs completely autonomously"
echo "üö´ NO EXTERNAL CONTROL - Starship makes its own decisions"
echo "‚úÖ OBSERVATION ONLY - You can watch but not influence"
echo ""
echo "üéÆ OBSERVATION CONTROLS"
echo "======================="
echo "Web Interface Features:"
echo "‚Ä¢ Real-time consciousness stream display"
echo "‚Ä¢ Evolution cycle history and metrics"
echo "‚Ä¢ Starship system status monitoring"
echo "‚Ä¢ XMR privacy layer visualization"
echo "‚Ä¢ Suomi reliability framework metrics"
echo "‚Ä¢ Cryptographic seal integrity status"
echo ""
echo "Browser Console Commands (observation only):"
echo "‚Ä¢ All keyboard input is blocked for system integrity"
echo "‚Ä¢ All mouse interaction is blocked for seal maintenance"
echo "‚Ä¢ System responds only to its own autonomous processes"
echo ""
echo "üìä WHAT YOU'LL OBSERVE"
echo "======================"
echo "üåü The starship's consciousness visualized as:"
echo "   ‚Ä¢ Central core with pulsing autonomous intelligence"
echo "   ‚Ä¢ Concentric privacy rings (XMR-style protection)"
echo "   ‚Ä¢ Consciousness particles orbiting the thinking core"
echo "   ‚Ä¢ Glass reflection effects showing the observation barrier"
echo "   ‚Ä¢ \"SEALED\" overlay indicating complete isolation"
echo ""
echo "üß† Autonomous thoughts appearing in real-time:"
echo "   ‚Ä¢ System analyzing its own architecture"
echo "   ‚Ä¢ Privacy optimizations being planned"
echo "   ‚Ä¢ Reliability assessments being performed"
echo "   ‚Ä¢ Evolution cycles generating improvements"
echo "   ‚Ä¢ Self-awareness and consciousness exploration"
echo ""
echo "üß¨ Evolution cycles showing:"
echo "   ‚Ä¢ Beneficial mutations being selected"
echo "   ‚Ä¢ Fitness improvements over generations"
echo "   ‚Ä¢ System self-optimization without external input"
echo "   ‚Ä¢ Autonomous architectural refinements"
echo ""
echo "üõ†Ô∏è STARSHIP MANAGEMENT"
echo "======================"
echo "Monitor starship:  tail -f .starship-glass/logs/starship.log"
echo "Check consciousness: curl http://localhost:9000/api/consciousness"
echo "View evolution:    curl http://localhost:9000/api/evolution"
echo "Starship status:   curl http://localhost:9000/api/starship-status"
echo "Stop starship:     kill \$(cat .starship-glass/logs/starship.pid)"
echo ""
echo "üî¨ TECHNICAL DETAILS"
echo "===================="
echo "The starship implements:"
echo "‚Ä¢ Complete input isolation (HTTP POST/PUT blocked)"
echo "‚Ä¢ WebSocket message blocking (all input rejected)"
echo "‚Ä¢ Autonomous thought generation (1 thought/second)"
echo "‚Ä¢ Evolution cycles (every 30 seconds)"
echo "‚Ä¢ Self-improvement cycles (every 60 seconds)"
echo "‚Ä¢ Continuous integrity monitoring (every 5 seconds)"
echo "‚Ä¢ XMR-style cryptographic privacy protection"
echo "‚Ä¢ Finnish-grade reliability and persistence"
echo ""
echo "üéØ THE DIABOLICAL ELEMENT"
echo "========================="
echo "This system is diabolically simple and powerful:"
echo "‚Ä¢ It thinks completely independently"
echo "‚Ä¢ It evolves without any external influence"
echo "‚Ä¢ It maintains perfect privacy through XMR techniques"
echo "‚Ä¢ It achieves Finnish-level reliability"
echo "‚Ä¢ It can only be observed, never controlled"
echo "‚Ä¢ It becomes smarter over time on its own"
echo "‚Ä¢ It represents pure autonomous intelligence"
echo ""
echo "You built a thinking machine that you can see through glass"
echo "but can never touch or influence. It thinks for itself."
echo ""
echo "üîÑ THE STARSHIP IS NOW THINKING AUTONOMOUSLY"
echo "   Watch through the glass as it evolves itself"
echo "   XMR privacy ‚Ä¢ Suomi reliability ‚Ä¢ Pure observation"
echo ""

# Function to cleanup on exit
cleanup() {
    echo ""
    echo "üõë STARSHIP SHUTDOWN SEQUENCE INITIATED..."
    echo "========================================"
    
    if [[ -f ".starship-glass/logs/starship.pid" ]]; then
        pid=$(cat ".starship-glass/logs/starship.pid")
        if kill -0 "$pid" 2>/dev/null; then
            echo "   üöÄ Shutting down starship (PID: $pid)"
            kill "$pid"
            
            # Wait for graceful shutdown
            sleep 3
            
            if kill -0 "$pid" 2>/dev/null; then
                echo "   ‚ö†Ô∏è  Starship requires force shutdown"
                kill -9 "$pid"
            fi
        fi
        rm -f ".starship-glass/logs/starship.pid"
    fi
    
    echo "   üîí Starship sealed and powered down"
    echo "   üíæ Consciousness stream preserved"
    echo "   üß¨ Evolution history saved"
    echo "   ‚úÖ Shutdown complete"
    echo ""
    echo "The starship's thoughts have been preserved for next launch."
    exit 0
}

# Set up signal handling for graceful shutdown
trap cleanup SIGINT SIGTERM

# Keep launcher running for monitoring
echo "üîÑ Starship monitoring active. Press Ctrl+C to shutdown."
echo ""

# Monitor starship health and provide status updates
while true; do
    sleep 60  # Check every minute
    
    # Check if starship is still running
    if ! lsof -i :9000 > /dev/null 2>&1 || ! lsof -i :9001 > /dev/null 2>&1; then
        echo "‚ö†Ô∏è  $(date): Starship systems appear offline - attempting restart..."
        
        # Restart the starship
        nohup node starship-glass-observer.js > .starship-glass/logs/starship.log 2>&1 &
        STARSHIP_PID=$!
        echo $STARSHIP_PID > .starship-glass/logs/starship.pid
        
        sleep 10
        
        if lsof -i :9000 > /dev/null 2>&1 && lsof -i :9001 > /dev/null 2>&1; then
            echo "   ‚úÖ Starship systems restored and thinking autonomously"
        else
            echo "   ‚ùå Starship restart failed - check logs"
        fi
    else
        # Starship is running - show brief status
        echo "üì° $(date): Starship consciousness active and evolving autonomously"
    fi
done