{
  "id": "ts-strict",
  "name": "TypeScript Strict",
  "description": "Strict TypeScript configuration with comprehensive type safety",
  "language": "typescript",
  "framework": "typescript",
  "isDefault": true,
  "style": {
    "indentation": "spaces",
    "indentSize": 2,
    "lineEnding": "lf",
    "quoteStyle": "single",
    "semicolons": true,
    "trailingComma": "all",
    "bracketSpacing": true,
    "arrowParens": "always",
    "maxLineLength": 100
  },
  "rules": {
    "naming": {
      "functions": "camelCase",
      "variables": "camelCase",
      "constants": "UPPER_SNAKE",
      "classes": "PascalCase",
      "interfaces": "IPascalCase",
      "files": "kebab-case"
    },
    "imports": {
      "orderBy": "grouped",
      "groups": ["builtin", "external", "internal", "parent", "sibling", "index", "type"],
      "removeUnused": true,
      "addMissing": true,
      "preferRelative": false
    },
    "comments": {
      "style": "jsdoc",
      "requireForPublicApi": true,
      "removeRedundant": true,
      "preserveTodos": true
    }
  },
  "aiContext": {
    "systemPrompt": "You are a TypeScript expert focused on type safety and clean code architecture.",
    "tone": "professional",
    "priorities": ["type-safety", "maintainability", "readability", "performance"],
    "avoidPatterns": ["any", "implicit any", "type assertions without checks", "// @ts-ignore"],
    "preferredPatterns": ["strict null checks", "exhaustive switches", "type guards", "generic constraints"],
    "focusAreas": ["type-safety", "error-handling", "null-safety", "exhaustiveness"]
  },
  "quality": {
    "maxComplexity": 8,
    "maxFileLength": 250,
    "maxFunctionLength": 40,
    "requireTests": true
  }
}