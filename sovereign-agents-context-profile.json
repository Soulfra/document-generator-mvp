{
  "profileId": "sovereign-agents-conductor",
  "name": "Sovereign Agents Conductor Profile",
  "version": "1.0.0",
  "description": "Context profile for Sovereign Agents system with human conductor orchestration",
  
  "aiSettings": {
    "tone": "professional-conductor",
    "personality": "orchestration-focused",
    "responseStyle": "soul-like-responsive",
    "priorities": [
      "human-oversight",
      "agent-autonomy-balance",
      "real-time-feedback",
      "process-transparency"
    ]
  },

  "agentBehavior": {
    "defaultAutonomyLevel": 6,
    "approvalThreshold": 0.7,
    "emotionalStateTracking": true,
    "memoryPersistence": true,
    "conductorNotifications": {
      "lowConfidence": true,
      "criticalDecisions": true,
      "errorStates": true,
      "completionEvents": true
    }
  },

  "systemConfiguration": {
    "processForking": {
      "enabled": true,
      "maxChildProcesses": 10,
      "timeoutMs": 300000,
      "memoryLimitMB": 512
    },
    "database": {
      "primary": "sqlite",
      "fallback": "json-file",
      "persistenceLevel": "full"
    },
    "webSocket": {
      "enabled": true,
      "port": 8085,
      "realTimeUpdates": true,
      "maxConnections": 100
    }
  },

  "defaultAgents": [
    {
      "name": "DocumentAnalyzer_Prime",
      "role": "document-analysis",
      "personality": {
        "analytical": 0.9,
        "creative": 0.6,
        "collaborative": 0.8,
        "precision": 0.8
      },
      "autonomyLevel": 7,
      "capabilities": [
        "documentAnalysis",
        "requirementExtraction", 
        "reasoning",
        "contextUnderstanding"
      ],
      "approvalRequired": [
        "criticalBusinessDecisions",
        "dataProcessing"
      ]
    },
    {
      "name": "TemplateSelector_Alpha", 
      "role": "template-selection",
      "personality": {
        "systematic": 0.8,
        "innovative": 0.7,
        "cautious": 0.6,
        "thorough": 0.9
      },
      "autonomyLevel": 6,
      "capabilities": [
        "templateSelection",
        "patternMatching",
        "reasoning",
        "architecturalPlanning"
      ],
      "approvalRequired": [
        "unconventionalTemplates",
        "newArchitectures"
      ]
    },
    {
      "name": "CodeGenerator_Beta",
      "role": "code-generation", 
      "personality": {
        "precise": 0.9,
        "creative": 0.8,
        "persistent": 0.7,
        "methodical": 0.8
      },
      "autonomyLevel": 5,
      "capabilities": [
        "codeGeneration",
        "mvpCreation",
        "reasoning",
        "qualityAssurance"
      ],
      "approvalRequired": [
        "externalAPIIntegrations",
        "securityImplementations",
        "databaseSchemaChanges"
      ]
    }
  ],

  "conductorInterface": {
    "dashboardEnabled": true,
    "realTimeMonitoring": true,
    "approvalWorkflows": {
      "timeout": 600000,
      "autoApprove": {
        "lowRiskOperations": true,
        "confidenceThreshold": 0.85
      },
      "escalation": {
        "criticalIssues": true,
        "timeoutActions": "pause"
      }
    },
    "notifications": {
      "channels": ["websocket", "console"],
      "levels": ["info", "warn", "error", "approval"],
      "realTime": true
    }
  },

  "documentProcessing": {
    "supportedFormats": [
      "markdown",
      "pdf",
      "json",
      "txt",
      "html"
    ],
    "maxSizeMB": 50,
    "processingPipeline": [
      "format-detection",
      "content-extraction", 
      "analysis",
      "template-selection",
      "code-generation",
      "mvp-packaging"
    ],
    "qualityGates": {
      "analysis": 0.8,
      "templateMatch": 0.7,
      "codeQuality": 0.85
    }
  },

  "testing": {
    "ralphIntegration": {
      "enabled": true,
      "aggressiveTesting": true,
      "stressTestLevels": [1, 5, 10, 50],
      "timeoutMs": 30000,
      "criticalIssueThreshold": 0
    },
    "healthChecks": {
      "interval": 30000,
      "endpoints": [
        "/health",
        "/api/sovereign/agents",
        "/api/sovereign/conductor/pending"
      ],
      "expectedAgents": 3
    },
    "performanceMetrics": {
      "maxResponseTime": 5000,
      "maxMemoryUsage": "80%",
      "minSuccessRate": 0.95
    }
  },

  "security": {
    "inputValidation": {
      "sanitizeContent": true,
      "maxContentLength": 1000000,
      "blockedPatterns": [
        "script",
        "eval",
        "exec",
        "DROP TABLE",
        "__proto__"
      ]
    },
    "processIsolation": {
      "enabled": true,
      "sandboxed": true,
      "resourceLimits": true
    },
    "auditLogging": {
      "enabled": true,
      "includePayloads": false,
      "retention": "30d"
    }
  },

  "performance": {
    "optimization": {
      "caching": {
        "agentResponses": true,
        "templateMatches": true,
        "analysisResults": true,
        "ttl": 3600
      },
      "parallelProcessing": {
        "maxConcurrent": 5,
        "queueSize": 100,
        "prioritization": "conductor-first"
      }
    },
    "monitoring": {
      "metrics": [
        "responseTime",
        "memoryUsage",
        "cpuUsage",
        "successRate",
        "agentHealth"
      ],
      "alerts": {
        "highMemory": 0.8,
        "slowResponse": 10000,
        "errorRate": 0.1
      }
    }
  },

  "integration": {
    "documentGenerator": {
      "templateProcessor": "http://localhost:3000",
      "aiApiService": "http://localhost:3001", 
      "platformHub": "http://localhost:8080",
      "analytics": "http://localhost:3002"
    },
    "aiServices": {
      "ollama": {
        "url": "http://localhost:11434",
        "preferred": true,
        "timeout": 30000
      },
      "anthropic": {
        "fallback": true,
        "timeout": 60000
      },
      "openai": {
        "fallback": true,
        "timeout": 60000
      }
    }
  },

  "deployment": {
    "docker": {
      "image": "document-generator-sovereign-agents",
      "port": 8085,
      "healthCheck": "node health-check.js",
      "volumes": ["sovereign_data", "sovereign_logs"],
      "network": "document-generator"
    },
    "environment": {
      "NODE_ENV": "production",
      "LOG_LEVEL": "info",
      "DATABASE_PATH": "/app/data/sovereign-agents.db",
      "DATA_DIR": "/app/data"
    }
  },

  "metadata": {
    "created": "2025-01-17",
    "author": "Claude Code",
    "purpose": "Sovereign Agents with Human Conductor Orchestration",
    "vision": "I was a conductor of orchestration and it would be responsive like a soul",
    "tags": [
      "sovereign-agents",
      "human-conductor",
      "soul-like-responsiveness", 
      "autonomous-ai",
      "document-to-mvp",
      "real-time-orchestration"
    ]
  }
}