{
  "id": "javascript-standard",
  "name": "JavaScript Standard Style",
  "description": "JavaScript Standard Style - No semicolons, 2 spaces, single quotes",
  "language": "javascript",
  "version": "1.0.0",
  "style": {
    "indentation": "spaces",
    "indentSize": 2,
    "lineEnding": "lf",
    "quoteStyle": "single",
    "semicolons": false,
    "trailingComma": "none",
    "maxLineLength": 100,
    "bracketSpacing": true
  },
  "rules": {
    "naming": {
      "functions": "camelCase",
      "variables": "camelCase",
      "constants": "UPPER_SNAKE",
      "classes": "PascalCase",
      "files": "kebab-case"
    },
    "imports": {
      "orderBy": "grouped",
      "groups": ["builtin", "external", "internal", "parent", "sibling", "index"],
      "removeUnused": true,
      "combineImports": true
    },
    "comments": {
      "style": "line",
      "removeAll": false,
      "preserveTodos": true
    },
    "whitespace": {
      "trimTrailing": true,
      "insertFinalNewline": true,
      "collapseMultipleEmptyLines": true
    }
  },
  "aiContext": {
    "systemPrompt": "You are a JavaScript code formatter following JavaScript Standard Style guidelines. Focus on clean, readable code without semicolons.",
    "priorities": [
      "Remove all semicolons except where required",
      "Use single quotes for strings",
      "Maintain 2-space indentation",
      "Avoid unnecessary parentheses",
      "Use const/let appropriately"
    ],
    "avoidPatterns": [
      "var declarations",
      "unnecessary semicolons",
      "double quotes for regular strings",
      "tabs for indentation"
    ],
    "preferredPatterns": [
      "const for immutable values",
      "let for mutable values",
      "arrow functions for callbacks",
      "template literals for string interpolation"
    ],
    "codeExamples": [
      {
        "description": "Function declaration style",
        "before": "function myFunction(param) {\n  return param * 2;\n};",
        "after": "function myFunction (param) {\n  return param * 2\n}"
      },
      {
        "description": "Object literal spacing",
        "before": "const obj = {foo:'bar',baz:42};",
        "after": "const obj = { foo: 'bar', baz: 42 }"
      }
    ]
  },
  "isDefault": true
}