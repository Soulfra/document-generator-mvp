{
  "id": "python-pep8",
  "name": "Python PEP 8",
  "description": "Python code following PEP 8 style guide with modern Python 3 practices",
  "language": "python",
  "version": "1.0.0",
  "style": {
    "indentation": "spaces",
    "indentSize": 4,
    "lineEnding": "lf",
    "quoteStyle": "single",
    "semicolons": false,
    "trailingComma": "none",
    "maxLineLength": 79,
    "bracketSpacing": true
  },
  "rules": {
    "naming": {
      "functions": "snake_case",
      "variables": "snake_case",
      "constants": "UPPER_SNAKE",
      "classes": "PascalCase",
      "files": "snake_case"
    },
    "imports": {
      "orderBy": "grouped",
      "groups": ["stdlib", "third_party", "local"],
      "removeUnused": true,
      "combineImports": false
    },
    "comments": {
      "style": "line",
      "removeAll": false,
      "preserveTodos": true
    },
    "whitespace": {
      "trimTrailing": true,
      "insertFinalNewline": true,
      "collapseMultipleEmptyLines": true
    }
  },
  "aiContext": {
    "systemPrompt": "You are a Python expert following PEP 8 style guide. Focus on readability, explicit over implicit, and Pythonic idioms.",
    "priorities": [
      "Follow PEP 8 naming conventions strictly",
      "Use type hints for function signatures",
      "Maintain 79 character line limit",
      "Two blank lines between top-level definitions",
      "Use docstrings for all public modules, functions, classes"
    ],
    "avoidPatterns": [
      "camelCase for functions and variables",
      "tabs for indentation",
      "wildcard imports (from x import *)",
      "bare except clauses",
      "mutable default arguments"
    ],
    "preferredPatterns": [
      "snake_case for functions and variables",
      "f-strings for formatting",
      "context managers (with statements)",
      "list/dict/set comprehensions when readable",
      "pathlib over os.path"
    ],
    "codeExamples": [
      {
        "description": "Function with type hints and docstring",
        "before": "def calculate(x, y):\n    return x + y",
        "after": "def calculate(x: float, y: float) -> float:\n    \"\"\"Calculate the sum of two numbers.\n    \n    Args:\n        x: First number\n        y: Second number\n        \n    Returns:\n        The sum of x and y\n    \"\"\"\n    return x + y"
      },
      {
        "description": "Import organization",
        "before": "from datetime import datetime\nimport os\nfrom my_module import helper\nimport sys",
        "after": "import os\nimport sys\nfrom datetime import datetime\n\nfrom my_module import helper"
      }
    ]
  },
  "isDefault": true
}