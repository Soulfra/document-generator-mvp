#!/bin/bash

# üåê‚öîÔ∏è SANDBOX METAVERSE LAUNCHER

echo "üåê‚öîÔ∏è SANDBOX METAVERSE LAUNCHER"
echo "==============================="
echo ""
echo "This is your own GTA/Roblox/Minecraft-style world!"
echo ""
echo "üéÆ FEATURES:"
echo "  ‚Ä¢ Open world with procedural terrain"
echo "  ‚Ä¢ Build mode (like Minecraft/Fortnite)"
echo "  ‚Ä¢ Spawn vehicles and NPCs"
echo "  ‚Ä¢ Multiplayer support"
echo "  ‚Ä¢ Chat system"
echo "  ‚Ä¢ 5 game modes (Explore/Build/Combat/Vehicle/Fly)"
echo "  ‚Ä¢ Persistent world (saves your builds)"
echo "  ‚Ä¢ Integration with duo verification systems"
echo ""
echo "üéØ CONTROLS:"
echo "  ‚Ä¢ WASD: Move"
echo "  ‚Ä¢ Mouse: Look (click to capture)"
echo "  ‚Ä¢ Space: Jump"
echo "  ‚Ä¢ B: Toggle build mode"
echo "  ‚Ä¢ T: Open chat"
echo "  ‚Ä¢ I: Inventory"
echo "  ‚Ä¢ 1-5: Switch game modes"
echo "  ‚Ä¢ C: Change camera (in 4.5D world)"
echo ""

# Function to check if Python is installed
check_python() {
    if ! command -v python3 &> /dev/null; then
        echo "‚ùå Python 3 is required but not installed"
        echo "Please install Python 3 from https://python.org"
        exit 1
    fi
}

# Function to install Python dependencies
install_deps() {
    echo "üì¶ Installing Python dependencies..."
    pip3 install --user websockets asyncio aiohttp >/dev/null 2>&1 || {
        echo "‚ö†Ô∏è Some dependencies may need manual installation"
    }
}

# Main menu
show_menu() {
    echo "üéÆ LAUNCH OPTIONS:"
    echo "=================="
    echo "1) üåê Launch Sandbox Metaverse (Full Experience)"
    echo "2) üéÆ Launch 4.5D Commander World (Original)"
    echo "3) üñ•Ô∏è Start Backend Server Only"
    echo "4) üöÄ Launch Everything (World + Backend)"
    echo "5) üìä View Duo System Status"
    echo "6) ‚ùå Exit"
    echo ""
    echo -n "Choose option (1-6): "
}

# Launch metaverse
launch_metaverse() {
    echo "üåê Launching Sandbox Metaverse..."
    
    if [[ "$OSTYPE" == "darwin"* ]]; then
        open sandbox-metaverse-world.html
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        xdg-open sandbox-metaverse-world.html 2>/dev/null || firefox sandbox-metaverse-world.html
    else
        start sandbox-metaverse-world.html
    fi
    
    echo "‚úÖ Metaverse launched in browser!"
    echo ""
    echo "üí° TIP: For multiplayer, also start the backend server (option 3)"
}

# Launch 4.5D world
launch_45d() {
    echo "üéÆ Launching 4.5D Commander World..."
    
    if [[ "$OSTYPE" == "darwin"* ]]; then
        open 4.5d-commander-world.html
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        xdg-open 4.5d-commander-world.html 2>/dev/null || firefox 4.5d-commander-world.html
    else
        start 4.5d-commander-world.html
    fi
    
    echo "‚úÖ 4.5D World launched!"
}

# Start backend
start_backend() {
    echo "üñ•Ô∏è Starting backend server..."
    echo ""
    echo "The backend provides:"
    echo "  ‚Ä¢ Multiplayer sync"
    echo "  ‚Ä¢ World persistence"
    echo "  ‚Ä¢ Duo system integration"
    echo "  ‚Ä¢ Real-time events"
    echo ""
    
    # Check if backend is already running
    if lsof -i:8765 >/dev/null 2>&1; then
        echo "‚ö†Ô∏è Backend already running on port 8765"
        echo "Kill existing process? (y/n): "
        read -r answer
        if [[ "$answer" == "y" ]]; then
            kill $(lsof -t -i:8765) 2>/dev/null
            sleep 1
        else
            return
        fi
    fi
    
    # Start backend
    python3 metaverse-backend.py &
    BACKEND_PID=$!
    
    echo "‚úÖ Backend started (PID: $BACKEND_PID)"
    echo "üì° WebSocket server: ws://localhost:8765"
    echo ""
    echo "Press Enter to return to menu (backend continues running)..."
    read -r
}

# Launch everything
launch_all() {
    echo "üöÄ Launching complete metaverse experience..."
    echo ""
    
    # Start backend first
    echo "1Ô∏è‚É£ Starting backend server..."
    python3 metaverse-backend.py &
    BACKEND_PID=$!
    sleep 2
    
    # Launch metaverse
    echo "2Ô∏è‚É£ Launching metaverse world..."
    launch_metaverse
    
    echo ""
    echo "‚úÖ Everything is running!"
    echo "   ‚Ä¢ Backend PID: $BACKEND_PID"
    echo "   ‚Ä¢ WebSocket: ws://localhost:8765"
    echo ""
    echo "To stop backend: kill $BACKEND_PID"
}

# View duo status
view_duo_status() {
    echo "üìä Checking duo systems..."
    if [ -f "view-spawned-systems.py" ]; then
        python3 view-spawned-systems.py
    else
        echo "‚ùå Duo status viewer not found"
    fi
    echo ""
    echo "Press Enter to continue..."
    read -r
}

# Main execution
main() {
    check_python
    install_deps
    
    while true; do
        clear
        echo "üåê‚öîÔ∏è SANDBOX METAVERSE SYSTEM"
        echo "============================="
        echo ""
        show_menu
        read -r choice
        
        case $choice in
            1)
                launch_metaverse
                ;;
            2)
                launch_45d
                ;;
            3)
                start_backend
                ;;
            4)
                launch_all
                ;;
            5)
                view_duo_status
                ;;
            6)
                echo "üëã Goodbye!"
                exit 0
                ;;
            *)
                echo "Invalid choice. Please try again."
                sleep 1
                ;;
        esac
    done
}

# Cleanup on exit
cleanup() {
    echo ""
    echo "üõë Shutting down..."
    # Kill any backend processes we started
    if [ ! -z "$BACKEND_PID" ]; then
        kill $BACKEND_PID 2>/dev/null
    fi
}

trap cleanup EXIT

# Check if we have the required files
if [ ! -f "sandbox-metaverse-world.html" ]; then
    echo "‚ùå sandbox-metaverse-world.html not found!"
    echo "Make sure you're in the correct directory"
    exit 1
fi

# Run main
main